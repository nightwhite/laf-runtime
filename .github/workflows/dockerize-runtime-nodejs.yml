name: dockerize-runtime-nodejs

on:
  workflow_dispatch:
  pull_request_target:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - "**"
      - ".github/workflows/dockerize-runtime-nodejs.yml"
      - "!**/*.md"
      - "!package-lock.json"
  push:
    tags:
      - v*.*.*
    branches: [main]
    paths:
      - "**"
      - ".github/workflows/dockerize-runtime-nodejs.yml"
      - "!**/*.md"
      - "!package-lock.json"

permissions:
  contents: read

concurrency:
  group: dockerize-runtime-nodejs-${{ github.ref }}

jobs:
  dockerize-main-image:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Package
        working-directory: ./
        run: |
          npm install pnpm -g
          pnpm install

      - name: Build Packages
        working-directory: ./
        run: npm run build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: docker.io/${{ secrets.DOCKER_USERNAME }}/laf-runtime
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64

  dockerize-init-image:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: docker.io/${{ secrets.DOCKER_USERNAME }}/laf-runtime-init
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile.init
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64